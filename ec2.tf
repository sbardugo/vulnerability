data "aws_availability_zones" "available" {
  state = "available"
}

resource "aws_key_pair" "deployer" {
  key_name   = "deployer-key-${var.environment}"
  public_key = "ssh-rsa AAAABCjCeYujjwm8HSIpEIbdkMBKI1KTqjYjXfA6aBF5A+DNNlP79j0ok-Pro.local"
}

resource "aws_instance" "ec2_open_for_all_sg" {
  tags                   = { Name = "ec2-open-sg" }
  ami                    = var.large_hdd_ami
  instance_type          = var.instance_type
  key_name               = "deployer-key-${var.environment}"
  subnet_id              = tolist(var.public_subnets)[0]
  vpc_security_group_ids = [aws_security_group.ec2_allow_all.id]
  iam_instance_profile   = var.iam
  root_block_device {
    volume_type           = "standard"
    encrypted             = true
    delete_on_termination = true
  }
  user_data = <<-EOF
		#! /bin/bash
    apt-get update
    apt-get upgrade
    sudo shutdown  
	EOF 
}

resource "aws_instance" "ec2" {
  for_each               = toset(var.ec2names)
  tags                   = { Name = "ec2-${each.value}" }
  ami                    = var.small_hdd_ami
  instance_type          = var.instance_type
  key_name               = "deployer-key-${var.environment}"
  subnet_id              = tolist(var.private_subnets)[0]
  vpc_security_group_ids = [aws_security_group.ec2_sg.id]
  iam_instance_profile   = var.iam
  root_block_device {
    volume_type           = "standard"
    delete_on_termination = true
  }
  user_data = <<-EOF
		#! /bin/bash
    apt-get update
    apt-get upgrade
    sudo shutdown  
	EOF 
}

resource "aws_security_group" "ec2_sg" {
  name        = "ec2_sg-${var.environment}"
  description = "Allow traffic for ecs"
  vpc_id      = var.vpc_id

  dynamic "ingress" {
    for_each = var.security_group
    content {
      description = ingress.value.description
      from_port   = ingress.value.from_port
      to_port     = ingress.value.to_port
      protocol    = ingress.value.protocol
      cidr_blocks = lookup(var.cidr_blocks, ingress.value.cidr_blocks, [])
    }
  }
  egress {
    description = "Allow outging connections"
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = { "Name" = "ec2-sg-${var.environment}" }
}

resource "aws_security_group" "ec2_allow_all" {
  name        = "ec2_allow_all-${var.environment}"
  description = "Allow all traffic for ecs"
  vpc_id      = var.vpc_public

  ingress {
    description = "Allow Incoming connections"
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
  egress {
    description = "Allow outging connections"
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = { "Name" = "ec2-allow_all-${var.environment}" }
}